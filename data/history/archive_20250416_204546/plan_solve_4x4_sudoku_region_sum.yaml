plan_id: plan_solve_4x4_sudoku_region_sum
task_id: solve_4x4_sudoku_region_sum
created_at: '2025-04-16T20:44:23.959757'
updated_at: '2025-04-16T20:44:23.959757'
version: 1
status: in_progress
subtasks:
- id: subtask_1
  description: '初期盤面情報とサムリージョン線情報を整理し、内部データ構造（例: 2次元配列・線マスク等）に変換する'
  status: not_started
  order: 1
  inputs:
  - 初期盤面（文字列 or 配列形式）
  - サムリージョンの定義（線がどのマスを通るか）
  outputs:
  - 盤面配列データ
  - サムリージョン線リスト or マスク
- id: subtask_2
  description: 標準4x4数独制約とサムリージョン制約を形式知識として記述し、適用用のロジック雛形を作成する
  status: not_started
  order: 2
  inputs:
  - 盤面配列データ
  - サムリージョン線リスト or マスク
  outputs:
  - 制約式の整理
  - 適用ロジック雛形
- id: subtask_3
  description: 数独＋サムリージョン制約を同時に満たす解を探索するアルゴリズムを実装し、解を探索する
  status: not_started
  order: 3
  inputs:
  - 盤面配列データ
  - サムリージョン線リスト
  - 制約式情報
  outputs:
  - 求められた解（盤面配列）
- id: subtask_4
  description: 求められた解が唯一であり、全制約を満たしているか検証する
  status: not_started
  order: 4
  inputs:
  - 求められた解（盤面配列）
  - 初期盤面
  - 制約式情報
  outputs:
  - 検証結果（True/False）
  - 理由説明（違反があればその内容）
- id: subtask_5
  description: 最終的な解答盤面と、その解が要件どおりである説明をまとめて出力する
  status: not_started
  order: 5
  inputs:
  - 求められた解
  - 検証結果
  - 違反理由 or 検証パス説明
  outputs:
  - 最終解答
  - 説明文
