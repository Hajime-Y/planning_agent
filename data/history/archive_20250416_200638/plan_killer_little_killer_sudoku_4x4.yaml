plan_id: plan_killer_little_killer_sudoku_4x4
task_id: killer_little_killer_sudoku_4x4
created_at: '2025-04-16T20:02:55.336393'
updated_at: '2025-04-16T20:02:55.336393'
version: 1
status: in_progress
subtasks:
- id: subtask_1
  description: 初期盤面、キラーケージ、リトルキラー情報を内部データ構造へパースする
  status: pending
  order: 1
  inputs:
    board:
    - - .
      - '2'
      - '1'
      - .
    - - .
      - '4'
      - .
      - .
    - - .
      - '3'
      - '4'
      - .
    - - .
      - .
      - '3'
      - .
    killer_cages:
    - sum: 5
      cells:
      - !!python/tuple
        - 0
        - 0
      - !!python/tuple
        - 0
        - 1
    - sum: 8
      cells:
      - !!python/tuple
        - 1
        - 0
      - !!python/tuple
        - 1
        - 1
      - !!python/tuple
        - 2
        - 1
    - sum: 4
      cells:
      - !!python/tuple
        - 1
        - 3
      - !!python/tuple
        - 2
        - 3
    little_killer:
      direction: diagonal_topright_bottomleft
      sum: 8
      cells:
      - !!python/tuple
        - 0
        - 3
      - !!python/tuple
        - 1
        - 2
      - !!python/tuple
        - 2
        - 1
      - !!python/tuple
        - 3
        - 0
  outputs:
    parsed_state: 内部データ構造化済みの盤面情報・制約情報
- id: subtask_2
  description: 未確定セルごとに可能な候補数字リストを生成（全制約考慮前）
  status: pending
  order: 2
  inputs:
    parsed_state: サブタスク1出力
  outputs:
    candidates: 各マスに入る可能性のある値リスト
- id: subtask_3
  description: 各種制約（数独、キラーケージ、リトルキラー）の成立判定ロジックを適用
  status: pending
  order: 3
  inputs:
    parsed_state: サブタスク1出力
    candidates: サブタスク2出力
  outputs:
    filtered_candidates: 制約適用後の候補リスト
- id: subtask_4
  description: バックトラッキング等を用いて全ての制約を満たす解を探索し、唯一解（またはすべての解）を導出
  status: pending
  order: 4
  inputs:
    parsed_state: サブタスク1出力
    filtered_candidates: サブタスク3出力
  outputs:
    solved_board: 完成した数独盤面
- id: subtask_5
  description: 解盤面の検証（全制約を再度確認、必要なら結果を出力）
  status: pending
  order: 5
  inputs:
    solved_board: サブタスク4出力
    parsed_state: サブタスク1出力
  outputs:
    is_valid: 解の妥当性（True/False）、エラーなら位置や理由
